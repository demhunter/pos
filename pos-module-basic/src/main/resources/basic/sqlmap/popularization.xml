<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pos.basic.dao.PopularizationDao">

    <insert id="save" parameterType="com.pos.basic.domain.PopularizationDocument">
        INSERT INTO popularization_document
        (
            document,
            images,
            create_user_id,
            create_time
        ) VALUE
        (
            #{document.document},
            #{document.images},
            #{document.createUserId},
            NOW()
        )
    </insert>

    <update id="update" parameterType="com.pos.basic.domain.PopularizationDocument">
        UPDATE popularization_document
        SET document = #{document.document},
        images = #{document.images},
        update_user_id = #{document.updateUserId},
        update_time = NOW()
        WHERE `id` = #{document.id}
    </update>

    <select id="get" resultType="com.pos.basic.domain.PopularizationDocument">
        SELECT
        <include refid="documentColumns"/>
        FROM popularization_document
        WHERE `id` = #{documentId}
    </select>

    <update id="updateDocumentAvailable">
        UPDATE popularization_document
        SET available = #{available},
        update_user_id = #{updateUserId},
        update_time = NOW()
        WHERE `id` = #{documentId}
    </update>

    <select id="getDocumentCount" resultType="int">
        SELECT
        COUNT(*)
        FROM popularization_document
        <include refid="documentConditionColumns"/>
    </select>

    <select id="queryDocuments" resultType="com.pos.basic.domain.PopularizationDocument">
        SELECT
        <include refid="documentColumns"/>
        FROM popularization_document
        <include refid="documentConditionColumns"/>
        <if test="orderHelper != null">
            ORDER BY ${orderHelper.fieldName} ${orderHelper.ordination}
        </if>
        LIMIT #{limitHelper.offset}, #{limitHelper.pageSize}
    </select>
    
    <sql id="documentConditionColumns">
        <if test="condition != null">
            <where>
                <if test="condition.beginTime != null">
                    create_time &gt;= #{condition.beginTime}
                </if>
                <if test="condition.endTime != null">
                    AND create_time &lt; #{condition.endTime}
                </if>
                <if test="condition.available != null">
                    AND available = #{condition.available}
                </if>
                <if test="condition.searchKey != null">
                    AND document LIKE CONCAT('%', #{condition.searchKey}, '%')
                </if>
            </where>
        </if>
    </sql>

    <sql id="documentColumns">
        `id`,
        document,
        images,
        available,
        update_user_id AS updateUserId,
        update_time AS updateTime,
        create_user_id AS createUserId,
        create_time AS createTime
    </sql>
</mapper>
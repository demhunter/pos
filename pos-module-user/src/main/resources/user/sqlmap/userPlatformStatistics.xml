<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pos.user.dao.UserPlatformStatisticsDao">

    <select id="queryCustomerStatistics" resultType="com.pos.user.dto.customer.CustomerDto">
        SELECT
        <include refid="customerDtoColumns"/>
        FROM `user` u
        INNER JOIN user_class uc ON u.id = uc.user_id
        INNER JOIN customer c ON u.id = c.user_id
        <where>
            uc.user_type = 'c'
            <if test="condition.beginTime != null">
                AND uc.create_time <![CDATA[>=]]> #{condition.beginTime}
            </if>
            <if test="condition.endTime != null">
                AND uc.create_time <![CDATA[<]]> #{condition.endTime}
            </if>
        </where>
    </select>

    <select id="queryUserClassSatistics" resultType="com.pos.user.domain.UserClass">
        SELECT
        <include refid="userClassColumns"/>
        FROM user_class uc
        <where>
            <if test="userType != null">
                uc.user_type = #{userType}
            </if>
            <if test="condition.beginTime != null">
                AND uc.create_time <![CDATA[>=]]> #{condition.beginTime}
            </if>
            <if test="condition.endTime != null">
                AND uc.create_time <![CDATA[<]]> #{condition.endTime}
            </if>
        </where>
    </select>

    <select id="queryEmployeeInfo" resultType="com.pos.user.dto.statistics.EmployeeInfoDto">
        SELECT
        u.id AS id,
        u.`name` AS `name`,
        u.user_phone AS phone,
        e.user_detail_type AS employeeType,
        `c`.id AS companyId,
        `c`.name AS companyName,
        uc.last_login_time AS lastLoginTime,
        (SELECT COUNT(*) FROM case_employee_relation WHERE user_id = u.id) AS caseCount
        FROM `user` u
        JOIN user_class AS uc ON uc.user_id = u.id
        JOIN employee AS e ON e.user_id = u.id
        JOIN company AS `c` ON e.company_id = `c`.id
        <where>
            uc.user_type = 'e'
            <if test="cityId != null">
                AND `c`.area_id = #{cityId}
            </if>
            <if test="employeeType != null">
                AND e.user_detail_type = #{employeeType}
            </if>
            <if test="hasCase">
                AND (SELECT COUNT(*) FROM case_employee_relation WHERE user_id = u.id) <![CDATA[>]]> 0
            </if>
            <if test="loginedHistoryType != null">
                <choose>
                    <when test="loginedHistoryType == 1">
                        AND uc.last_login_time IS NOT NULL
                    </when>
                    <when test="loginedHistoryType == 2">
                        AND uc.last_login_time IS NULL
                    </when>
                    <when test="loginedHistoryType == 3">
                        AND uc.last_login_time <![CDATA[<]]> subdate(NOW(), interval 7 day)
                    </when>
                </choose>
            </if>
        </where>
        LIMIT #{limitHelper.offset}, #{limitHelper.pageSize}
    </select>

    <sql id="userClassColumns">
        uc.id as id,
        uc.user_id as userId,
        uc.user_type as userType,
        uc.available as available,
        uc.create_user as createUserId,
        uc.create_time as createTime,
        uc.update_time as updateTime,
        uc.last_login_time as lastLoginTime,
        uc.register_ip as registerIp,
        uc.last_login_ip as lastLoginIp,
        uc.register_info as registerInfo,
        uc.last_login_info as lastLoginInfo
    </sql>

    <sql id="customerDtoColumns">
        u.id AS id,
        u.user_name AS userName,
        u.user_phone AS userPhone,
        u.deleted AS deleted,
        u.mail AS mail,
        u.name AS `name`,
        u.gender AS gender,
        u.id_card AS idCard,
        u.id_image_a AS idImageA,
        u.id_image_b AS idImageB,
        u.id_hold_image AS idHoldImage,
        uc.id AS userTypeId,
        uc.user_type AS userType,
        uc.available as available,
        uc.create_user AS createUserId,
        uc.create_time AS createTime,
        uc.update_time AS updateTime,
        uc.last_login_time AS lastLoginTime,
        `c`.id AS entityId,
        `c`.nick_name AS nickName,
        `c`.head_image AS headImage
    </sql>
</mapper>